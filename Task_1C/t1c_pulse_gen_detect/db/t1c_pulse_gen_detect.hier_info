|t1c_pulse_gen_detect
clk_50M => trigger~reg0.CLK
clk_50M => loop_counter[0].CLK
clk_50M => loop_counter[1].CLK
clk_50M => loop_counter[2].CLK
clk_50M => loop_counter[3].CLK
clk_50M => loop_counter[4].CLK
clk_50M => loop_counter[5].CLK
clk_50M => loop_counter[6].CLK
clk_50M => loop_counter[7].CLK
clk_50M => loop_counter[8].CLK
clk_50M => loop_counter[9].CLK
clk_50M => loop_counter[10].CLK
clk_50M => loop_counter[11].CLK
clk_50M => loop_counter[12].CLK
clk_50M => loop_counter[13].CLK
clk_50M => loop_counter[14].CLK
clk_50M => loop_counter[15].CLK
clk_50M => trigger_counter[0].CLK
clk_50M => trigger_counter[1].CLK
clk_50M => trigger_counter[2].CLK
clk_50M => trigger_counter[3].CLK
clk_50M => trigger_counter[4].CLK
clk_50M => trigger_counter[5].CLK
clk_50M => trigger_counter[6].CLK
clk_50M => trigger_counter[7].CLK
clk_50M => trigger_counter[8].CLK
clk_50M => warmup_counter[0].CLK
clk_50M => warmup_counter[1].CLK
clk_50M => warmup_counter[2].CLK
clk_50M => warmup_counter[3].CLK
clk_50M => warmup_counter[4].CLK
clk_50M => warmup_counter[5].CLK
clk_50M => warmup_counter[6].CLK
clk_50M => warmup_counter[7].CLK
clk_50M => state[0]~reg0.CLK
clk_50M => state[1]~reg0.CLK
clk_50M => width_counter[0].CLK
clk_50M => width_counter[1].CLK
clk_50M => width_counter[2].CLK
clk_50M => width_counter[3].CLK
clk_50M => width_counter[4].CLK
clk_50M => width_counter[5].CLK
clk_50M => width_counter[6].CLK
clk_50M => width_counter[7].CLK
clk_50M => width_counter[8].CLK
clk_50M => width_counter[9].CLK
clk_50M => width_counter[10].CLK
clk_50M => width_counter[11].CLK
clk_50M => width_counter[12].CLK
clk_50M => width_counter[13].CLK
clk_50M => width_counter[14].CLK
clk_50M => width_counter[15].CLK
clk_50M => width_counter[16].CLK
clk_50M => width_counter[17].CLK
clk_50M => width_counter[18].CLK
clk_50M => width_counter[19].CLK
clk_50M => width_counter[20].CLK
clk_50M => width_counter[21].CLK
clk_50M => pulses[0]~reg0.CLK
clk_50M => pulses[1]~reg0.CLK
clk_50M => pulses[2]~reg0.CLK
clk_50M => pulses[3]~reg0.CLK
clk_50M => pulses[4]~reg0.CLK
clk_50M => pulses[5]~reg0.CLK
clk_50M => pulses[6]~reg0.CLK
clk_50M => pulses[7]~reg0.CLK
clk_50M => pulses[8]~reg0.CLK
clk_50M => pulses[9]~reg0.CLK
clk_50M => pulses[10]~reg0.CLK
clk_50M => pulses[11]~reg0.CLK
clk_50M => pulses[12]~reg0.CLK
clk_50M => pulses[13]~reg0.CLK
clk_50M => pulses[14]~reg0.CLK
clk_50M => pulses[15]~reg0.CLK
clk_50M => pulses[16]~reg0.CLK
clk_50M => pulses[17]~reg0.CLK
clk_50M => pulses[18]~reg0.CLK
clk_50M => pulses[19]~reg0.CLK
clk_50M => pulses[20]~reg0.CLK
clk_50M => pulses[21]~reg0.CLK
clk_50M => out~reg0.CLK
reset => out.OUTPUTSELECT
reset => pulses.OUTPUTSELECT
reset => pulses.OUTPUTSELECT
reset => pulses.OUTPUTSELECT
reset => pulses.OUTPUTSELECT
reset => pulses.OUTPUTSELECT
reset => pulses.OUTPUTSELECT
reset => pulses.OUTPUTSELECT
reset => pulses.OUTPUTSELECT
reset => pulses.OUTPUTSELECT
reset => pulses.OUTPUTSELECT
reset => pulses.OUTPUTSELECT
reset => pulses.OUTPUTSELECT
reset => pulses.OUTPUTSELECT
reset => pulses.OUTPUTSELECT
reset => pulses.OUTPUTSELECT
reset => pulses.OUTPUTSELECT
reset => pulses.OUTPUTSELECT
reset => pulses.OUTPUTSELECT
reset => pulses.OUTPUTSELECT
reset => pulses.OUTPUTSELECT
reset => pulses.OUTPUTSELECT
reset => pulses.OUTPUTSELECT
reset => width_counter.OUTPUTSELECT
reset => width_counter.OUTPUTSELECT
reset => width_counter.OUTPUTSELECT
reset => width_counter.OUTPUTSELECT
reset => width_counter.OUTPUTSELECT
reset => width_counter.OUTPUTSELECT
reset => width_counter.OUTPUTSELECT
reset => width_counter.OUTPUTSELECT
reset => width_counter.OUTPUTSELECT
reset => width_counter.OUTPUTSELECT
reset => width_counter.OUTPUTSELECT
reset => width_counter.OUTPUTSELECT
reset => width_counter.OUTPUTSELECT
reset => width_counter.OUTPUTSELECT
reset => width_counter.OUTPUTSELECT
reset => width_counter.OUTPUTSELECT
reset => width_counter.OUTPUTSELECT
reset => width_counter.OUTPUTSELECT
reset => width_counter.OUTPUTSELECT
reset => width_counter.OUTPUTSELECT
reset => width_counter.OUTPUTSELECT
reset => width_counter.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => warmup_counter.OUTPUTSELECT
reset => warmup_counter.OUTPUTSELECT
reset => warmup_counter.OUTPUTSELECT
reset => warmup_counter.OUTPUTSELECT
reset => warmup_counter.OUTPUTSELECT
reset => warmup_counter.OUTPUTSELECT
reset => warmup_counter.OUTPUTSELECT
reset => warmup_counter.OUTPUTSELECT
reset => trigger_counter.OUTPUTSELECT
reset => trigger_counter.OUTPUTSELECT
reset => trigger_counter.OUTPUTSELECT
reset => trigger_counter.OUTPUTSELECT
reset => trigger_counter.OUTPUTSELECT
reset => trigger_counter.OUTPUTSELECT
reset => trigger_counter.OUTPUTSELECT
reset => trigger_counter.OUTPUTSELECT
reset => trigger_counter.OUTPUTSELECT
reset => loop_counter.OUTPUTSELECT
reset => loop_counter.OUTPUTSELECT
reset => loop_counter.OUTPUTSELECT
reset => loop_counter.OUTPUTSELECT
reset => loop_counter.OUTPUTSELECT
reset => loop_counter.OUTPUTSELECT
reset => loop_counter.OUTPUTSELECT
reset => loop_counter.OUTPUTSELECT
reset => loop_counter.OUTPUTSELECT
reset => loop_counter.OUTPUTSELECT
reset => loop_counter.OUTPUTSELECT
reset => loop_counter.OUTPUTSELECT
reset => loop_counter.OUTPUTSELECT
reset => loop_counter.OUTPUTSELECT
reset => loop_counter.OUTPUTSELECT
reset => loop_counter.OUTPUTSELECT
reset => trigger~reg0.ENA
echo_rx => pulses.OUTPUTSELECT
echo_rx => pulses.OUTPUTSELECT
echo_rx => pulses.OUTPUTSELECT
echo_rx => pulses.OUTPUTSELECT
echo_rx => pulses.OUTPUTSELECT
echo_rx => pulses.OUTPUTSELECT
echo_rx => pulses.OUTPUTSELECT
echo_rx => pulses.OUTPUTSELECT
echo_rx => pulses.OUTPUTSELECT
echo_rx => pulses.OUTPUTSELECT
echo_rx => pulses.OUTPUTSELECT
echo_rx => pulses.OUTPUTSELECT
echo_rx => pulses.OUTPUTSELECT
echo_rx => pulses.OUTPUTSELECT
echo_rx => pulses.OUTPUTSELECT
echo_rx => pulses.OUTPUTSELECT
echo_rx => pulses.OUTPUTSELECT
echo_rx => pulses.OUTPUTSELECT
echo_rx => pulses.OUTPUTSELECT
echo_rx => pulses.OUTPUTSELECT
echo_rx => pulses.OUTPUTSELECT
echo_rx => pulses.OUTPUTSELECT
echo_rx => width_counter.OUTPUTSELECT
echo_rx => width_counter.OUTPUTSELECT
echo_rx => width_counter.OUTPUTSELECT
echo_rx => width_counter.OUTPUTSELECT
echo_rx => width_counter.OUTPUTSELECT
echo_rx => width_counter.OUTPUTSELECT
echo_rx => width_counter.OUTPUTSELECT
echo_rx => width_counter.OUTPUTSELECT
echo_rx => width_counter.OUTPUTSELECT
echo_rx => width_counter.OUTPUTSELECT
echo_rx => width_counter.OUTPUTSELECT
echo_rx => width_counter.OUTPUTSELECT
echo_rx => width_counter.OUTPUTSELECT
echo_rx => width_counter.OUTPUTSELECT
echo_rx => width_counter.OUTPUTSELECT
echo_rx => width_counter.OUTPUTSELECT
echo_rx => width_counter.OUTPUTSELECT
echo_rx => width_counter.OUTPUTSELECT
echo_rx => width_counter.OUTPUTSELECT
echo_rx => width_counter.OUTPUTSELECT
echo_rx => width_counter.OUTPUTSELECT
echo_rx => width_counter.OUTPUTSELECT
trigger << trigger~reg0.DB_MAX_OUTPUT_PORT_TYPE
out << out~reg0.DB_MAX_OUTPUT_PORT_TYPE
pulses[0] << pulses[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pulses[1] << pulses[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pulses[2] << pulses[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pulses[3] << pulses[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pulses[4] << pulses[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pulses[5] << pulses[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pulses[6] << pulses[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pulses[7] << pulses[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pulses[8] << pulses[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pulses[9] << pulses[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pulses[10] << pulses[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pulses[11] << pulses[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pulses[12] << pulses[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pulses[13] << pulses[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pulses[14] << pulses[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pulses[15] << pulses[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pulses[16] << pulses[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pulses[17] << pulses[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pulses[18] << pulses[18]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pulses[19] << pulses[19]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pulses[20] << pulses[20]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pulses[21] << pulses[21]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state[0] << state[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state[1] << state[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE


